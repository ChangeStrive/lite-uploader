!function(t){var e={fn:{}};"object"==typeof module&&"object"==typeof module.exports?module.exports=t(e):t($||e)}(function(t){function e(t,e,i){this.options=this._applyDefaults(t),this._getFiles=e,this._triggerEvent=i,this.xhrs=[]}return t.fn.liteUploader=function(i){return this.each(function(){i.ref=i.ref||t(this).attr("name");var r=function(){return t(this).get(0).files}.bind(this),n=function(e,i){t(this).trigger.bind(t(this))(e,[i])}.bind(this);t.data(this,"liteUploader",new e(i,r,n))})},e.prototype={_applyDefaults:function(t){return Object.assign({script:null,ref:null,rules:{},params:{},headers:{},validators:[],singleFileUploads:!1,beforeRequest:function(t,e){return Promise.resolve(e)}},t)},_init:function(t){if(t=t||this._getFiles(),!t||!t.length)throw new Error("No files");return Promise.all([this._validateOptions(),this._validateFiles(t)]).then(function(e){var i=e[0];i||(i=e[1]),i?this._triggerEvent("lu:errors",i):(this._triggerEvent("lu:start",t),this.xhrs=[],this._startUpload(t))}.bind(this))},_startUpload:function(t){return this._splitFiles(t).map(function(t){var e=this._buildXhrObject();return this._beforeRequest(t).then(function(t){return e.send(t)})}.bind(this))},_splitFiles:function(t){var e=[];if(this.options.singleFileUploads)for(var i=0;i<t.length;i++)e.push([t[i]]);else e.push(t);return e},_beforeRequest:function(t){this._triggerEvent("lu:before",t);var e=this._collateFormData(t);return this.options.beforeRequest(t,e)},_validateOptions:function(){var t=["script","ref"],e=t.reduce(function(t,e){return this.options[e]||t.push({type:e+"Required"}),t}.bind(this),[]);return e.length?[{name:"_options",errors:e}]:null},_allowedFileTypeValidator:function(t,e){var i=t.split(","),r=/([a-z]+)\/\*$/;if(-1===i.indexOf(e.type)){var n=i.reduce(function(t,i){if(t)return t;var n=i.match(r)||[];return n[1]===e.type.split("/")[0]},!1);return n?void 0:{type:"type",rule:t,given:e.type}}},_maxSizeValidator:function(t,e){return e.size>t?{type:"size",rule:t,given:e.size}:void 0},_validateFiles:function(t){for(var e=[],i=0;i<t.length;i++)e.push(this._validateFile(t[i]));return Promise.all(e).then(function(t){var e=t.filter(function(t){return t.errors.length});return e.length?e:null})},_validateFile:function(t){var e={allowedFileTypes:this._allowedFileTypeValidator,maxSize:this._maxSizeValidator},i=Object.keys(this.options.rules).reduce(function(i,r){var n=this.options.rules[r];return n&&e[r]&&i.push(e[r](n,t)),i}.bind(this),[]),r=this.options.validators.map(function(e){return e(t)});return Promise.all(i.concat(r)).then(function(e){return{name:t.name,errors:e.filter(function(t){return!!t})}})},_getFormDataObject:function(){return new FormData},_collateFormData:function(t){var e=this._getFormDataObject();for(var i in this.options.params)e.append(i,this.options.params[i]);for(var r=0;r<t.length;r++)e.append(this.options.ref,t[r]);return e},_getXmlHttpRequestObject:function(){return new XMLHttpRequest},_buildXhrObject:function(){var t=this._getXmlHttpRequestObject();t.open("POST",this.options.script);for(var e in this.options.headers)t.setRequestHeader(e,this.options.headers[e]);return t.upload.addEventListener("progress",this._onXHRProgress.bind(this),!1),t.addEventListener("error",this._onXHRFailure.bind(this),!1),t.onreadystatechange=function(){4==t.readyState&&200==t.status&&this._onXHRSuccess(t.responseText)}.bind(this),this.xhrs.push(t),t},_onXHRProgress:function(t){t.lengthComputable&&this._triggerEvent("lu:progress",Math.floor(t.loaded/t.total*100))},_onXHRSuccess:function(t){this._triggerEvent("lu:success",t)},_onXHRFailure:function(t){this._triggerEvent("lu:fail",t)},startUpload:function(t){this._init(t)},addParam:function(t,e){this.options.params[t]=e},cancelUpload:function(){this._triggerEvent("lu:cancelled"),this.xhrs.forEach(function(t){t.abort()})}},e});