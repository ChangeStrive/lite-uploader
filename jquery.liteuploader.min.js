/* liteUploader v2.0.0 | https://github.com/burt202/lite-uploader | Aaron Burtnyk (http://www.burtdev.net) */

function LiteUploader(e,t){this.el=$(e);this.options=t;this.params=t.params;this.init()}$.fn.liteUploader=function(e){var t={script:null,rules:{allowedFileTypes:null,maxSize:null},params:{},changeHandler:true,clickElement:null};return this.each(function(){$.data(this,"liteUploader",new LiteUploader(this,$.extend(t,e)))})};LiteUploader.prototype={init:function(){if(this.options.changeHandler){this.el.change(function(){this.start()}.bind(this))}if(this.options.clickElement){this.options.clickElement.click(function(){this.start()}.bind(this))}},start:function(){var e=true,t=this.el.get(0).files;if(!this.el.attr("name")){console.error("the file input element must have a name attribute");e=false}if(!this.options.script){console.error("the script option is required");e=false}if(this.validateFiles(t)){e=false}if(!e){this.resetInput();return}this.el.trigger("lu:before",[t]);this.performUpload(this.collateFormData(t))},resetInput:function(){this.el.replaceWith(this.el.clone(true))},validateFiles:function(e){var t=false,n=[];$.each(e,function(r){var i=this.findErrors(e[r]);n.push({name:e[r].name,errors:i});if(i.length>0){t=true}}.bind(this));this.el.trigger("lu:errors",[n]);return t},findErrors:function(e){var t=[];$.each(this.options.rules,function(n,r){if(n==="allowedFileTypes"&&r&&$.inArray(e.type,r.split(","))===-1){t.push({type:"type",rule:r,given:e.type})}if(n==="maxSize"&&r&&e.size>r){t.push({type:"size",rule:r,given:e.size})}});return t},getFormDataObject:function(){return new FormData},addParam:function(e,t){this.params[e]=t},collateFormData:function(e){var t=this.getFormDataObject();if(this.el.attr("id")){t.append("liteUploader_id",this.el.attr("id"))}$.each(this.params,function(e,n){t.append(e,n)});$.each(e,function(n){t.append(this.el.attr("name")+"[]",e[n])}.bind(this));return t},performUpload:function(e){$.ajax({xhr:function(){var e=new XMLHttpRequest;e.upload.addEventListener("progress",function(e){if(e.lengthComputable){this.el.trigger("lu:progress",Math.floor(e.loaded/e.total*100))}}.bind(this),false);return e}.bind(this),url:this.options.script,type:"POST",data:e,processData:false,contentType:false}).done(function(e){this.el.trigger("lu:success",e);this.resetInput()}.bind(this)).fail(function(e){this.el.trigger("lu:fail",e);this.resetInput()}.bind(this))}}
