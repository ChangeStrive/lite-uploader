/* liteUploader v2.3.0 | https://github.com/burt202/lite-uploader | Aaron Burtnyk (http://www.burtdev.net) */
function LiteUploader(t,e){this.el=$(t),this.options=e,this.params=e.params,this.xhrs=[],this._init()}$.fn.liteUploader=function(t){var e={script:null,rules:{allowedFileTypes:null,maxSize:null},params:{},headers:{},changeHandler:!0,clickElement:null,singleFileUploads:!1,beforeRequest:function(t,e){return $.when(e)}};return this.each(function(){$.data(this,"liteUploader",new LiteUploader(this,$.extend(e,t)))})},window.LiteUploader=LiteUploader,LiteUploader.prototype={_init:function(){this.options.changeHandler&&this.el.change(function(){this._validateInputAndFiles()}.bind(this)),this.options.clickElement&&this.options.clickElement.click(function(){this._validateInputAndFiles()}.bind(this))},_getInputFiles:function(){return this.el.get(0).files},_validateInputAndFiles:function(){var t=this._getInputFiles(),e=this._getInputErrors(t);e||(e=this._getFileErrors(t)),e?(this.el.trigger("lu:errors",e),this._resetInput()):(this.el.trigger("lu:start",t),this._startUploadWithFiles(t))},_startUploadWithFiles:function(t){this.options.singleFileUploads?t.forEach(function(t){this._beforeUpload([t])}.bind(this)):this._beforeUpload(t)},_beforeUpload:function(t){this.el.trigger("lu:before",t),this.options.beforeRequest(t,this._collateFormData(t)).done(this._performUpload.bind(this))},_resetInput:function(){this.el.val("")},_getInputErrors:function(t){var e=[],i=[];return this.el.attr("name")||e.push({type:"fileInputNameRequired"}),this.options.script||e.push({type:"scriptOptionRequired"}),0===t.length&&e.push({type:"noFilesSelected"}),i.push({name:"liteUploader_input",errors:e}),e.length>0?[i]:null},_getFileErrors:function(t){var e=0,i=t.map(function(t){var i=this._findErrorsForFile(t);return e+=i.length,{name:t.name,errors:i}}.bind(this));return e>0?[i]:null},_findErrorsForFile:function(t){var e=[];return $.each(this.options.rules,function(i,n){"allowedFileTypes"===i&&n&&-1===n.split(",").indexOf(t.type)&&e.push({type:"type",rule:n,given:t.type}),"maxSize"===i&&n&&t.size>n&&e.push({type:"size",rule:n,given:t.size})}),e},_getFormDataObject:function(){return new FormData},_collateFormData:function(t){var e=this._getFormDataObject();return this.el.attr("id")&&e.append("liteUploader_id",this.el.attr("id")),$.each(this.params,function(t,i){e.append(t,i)}),t.forEach(function(t){e.append(this.el.attr("name"),t)}.bind(this)),e},_getXmlHttpRequestObject:function(){return new XMLHttpRequest},_buildXhrObject:function(){var t=this._getXmlHttpRequestObject();return t.upload.addEventListener("progress",this._onXHRProgress.bind(this),!1),this.xhrs.push(t),t},_performUpload:function(t){$.ajax({xhr:this._buildXhrObject.bind(this),url:this.options.script,type:"POST",data:t,headers:this.options.headers||{},processData:!1,contentType:!1}).done(this._onXHRSuccess.bind(this)).fail(this._onXHRFailure.bind(this)).always(this._onXHRAlways.bind(this))},_onXHRProgress:function(t){t.lengthComputable&&this.el.trigger("lu:progress",Math.floor(t.loaded/t.total*100))},_onXHRSuccess:function(t){this.el.trigger("lu:success",t)},_onXHRFailure:function(t){this.el.trigger("lu:fail",t)},_onXHRAlways:function(){this._resetInput()},addParam:function(t,e){this.params[t]=e},cancelUpload:function(){this.xhrs.forEach(function(t){t.abort()}),this.el.trigger("lu:cancelled"),this._resetInput()}};